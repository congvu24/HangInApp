<UserControl x:Class="DoAnLTTQ.Components.NavBarMain"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:DoAnLTTQ.Components"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:component ="clr-namespace:DoAnLTTQ.Components" 
             mc:Ignorable="d"
             d:DesignHeight="720" d:DesignWidth="320" FontFamily="Seoge UI">
    <UserControl.Resources>

        <Style x:Key="BackBtnWarper" TargetType="Grid">
            <Setter Property="Background" Value="#f5f7fa"/>
        </Style>

        <Style x:Key="backBtnIcon" TargetType="Button">
            <Setter Property="Width" Value="58"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <!--tat hover cua btn-->
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}" Height="auto">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />
                        <ControlTemplate.Triggers>
                            -->
            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="red" />
                            </Trigger>-->
            <!--
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->

            <!--end-->
        </Style>

        <Style x:Key="backBtnTitle" TargetType="Label">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Foreground" Value="#ffff"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="237"/>
            <Setter Property="Height" Value="84"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Grid.Column" Value="2"/>
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontFamily" Value="Comic Sans MS" />
        </Style>


        <!--Style x:Key="updateBtn" TargetType="Button">
            <Setter Property="Grid.Row" Value="3"/>
            <Setter Property="Width" Value="136"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            -->
        <!--<Setter Property="Canvas.Top" Value="31"/>
            <Setter Property="Canvas.Left" Value="92"/>-->
        <!--
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="#fff" />
            <Setter Property="FontWeight" Value="Medium" />
        </Style>-->
        <Style x:Key="changingbutton" TargetType="Button">
            <Setter Property="Grid.Row" Value="3"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontStretch" Value="Expanded"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    -->
            <!--<Setter Property="Background" Value="#8d918a"/>-->
            <!--
                    <Setter Property="Background" Value="Transparent"/>

                </Trigger>
            </Style.Triggers>-->
        </Style>


        <Style x:Key="changProfilePicture" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Canvas.Top" Value="135"/>
            <Setter Property="Canvas.Left" Value="113"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Style TargetType="Border">
                <Setter Property="CornerRadius" Value="25"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>-->
        </Style>

        <Style x:Key="changeProFilePicture_border" TargetType="Border">
            <Setter Property="CornerRadius" Value="25"/>
        </Style>

        <Style x:Key="UnderLineButtonStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0 0 0 0"/>
            <Setter Property="Margin" Value="20, 35, 20, 20"/>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="4" />
                            </Setter.Value>
                        </Setter>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>-->
        </Style>
        <ControlTemplate x:Key="boderSelect" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
                <!--<Border.Effect>
                    <DropShadowEffect x:Name="shadow" BlurRadius="2" Color="#FFDFD6D6" RenderingBias="Quality" ShadowDepth="6"/>
                </Border.Effect>-->
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>


            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Storyboard x:Key="floatLeft">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-159.001"/>

            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.378"/>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.32"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="floatRight">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-1.32"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="buttonQuanhDay">
            <BeginStoryboard x:Name="floatRight_BeginStoryboard" Storyboard="{StaticResource floatLeft}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="buttonTinNhan">
            <BeginStoryboard x:Name="floatRight_BeginStoryboard2" Storyboard="{StaticResource floatRight}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <!--main content-->
    <Border BorderBrush="#D1DDE3" BorderThickness="0 0 1 0">
        <Grid>

            <!--change height here-->
            <Grid Style="{StaticResource BackBtnWarper}" VerticalAlignment="Bottom" Height="680">
                <Grid.RowDefinitions>
                    <RowDefinition Height="86"/>
                    <RowDefinition Height="82"/>
                    <RowDefinition Height="408"/>
                    <RowDefinition Height="144"/>


                </Grid.RowDefinitions>

                <Border BorderBrush="#D1DDE3" BorderThickness="0 0 0 2" Height="84">
                    <Grid>
                        <Button Height="86" Padding="0" x:Name="ToSettingViewButton" Click="ToSettingViewButton_Click">

                            <Grid Width="320" x:Name="profile">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#ff7854" Offset="0.0" />
                                        <GradientStop Color="#fd267d" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Grid.Background>

                                <Grid Grid.Column="0" >
                                    <Label Name="TopImage"  Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <!--<Image Stretch="Fill" Source="{Binding avatar.url}" Width="80" Height="80">
                                            <Image.Clip>
                                                <EllipseGeometry Center="40,40" RadiusX="30" RadiusY="30" />
                                            </Image.Clip>
                                        </Image>-->
                                        <materialDesign:PackIcon Kind="AccountCircleOutline" Width="40" Height="40" Foreground="Beige"/>
                                    </Label>
                                </Grid>

                                <Grid Grid.Column="1">
                                    <Label Style="{StaticResource backBtnTitle}"  Content="{Binding name}" Grid.Column="1" HorizontalAlignment="Left" Margin="0,0,-62,0" Width="237"/>
                                </Grid>

                            </Grid>
                        </Button>

                    </Grid>
                </Border>

                <Border Grid.Row="1" BorderBrush="Transparent" BorderThickness="0 0 1 0">
                    <StackPanel  >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Style="{StaticResource UnderLineButtonStyle}">
                                <Button x:Name="buttonQuanhDay" Click="buttonQuanhDay_Click" Template="{DynamicResource boderSelect}" Style="{DynamicResource changingbutton}" Content="Quanh đây"/>
                            </Border>

                            <Border Grid.Column="1"  Style="{StaticResource UnderLineButtonStyle}">
                                <Button x:Name="buttonTinNhan" Click="buttonTinNhan_Click" Template="{DynamicResource boderSelect}" Style="{DynamicResource changingbutton}" Content="Tin nhắn"/>
                            </Border>
                        </Grid>
                        <!--<component:GridProfile></component:GridProfile>-->
                        <component:GridProfile VerticalAlignment="Top" userPictureNearBy="{Binding m_userPictureNearBy}" x:Name="gridProfileName"></component:GridProfile>
                        <ContentControl Content="{Binding TabChange}"/>
                    </StackPanel>
                </Border>
                <Grid Grid.Row="2" >
                    <component:GridMessage VerticalAlignment="Top" x:Name="gridMessage" />
                    <component:GridProfile VerticalAlignment="Top" x:Name="gridProfile" userPictureNearBy="{Binding m_userPictureNearBy}" ></component:GridProfile>
                </Grid>
                <Path x:Name="path" Data="M163.12228,0 L220.56822,0" HorizontalAlignment="Left" Height="6" Margin="213.423,64,0,0" Grid.Row="1" VerticalAlignment="Top" Width="53.248" RenderTransformOrigin="0.5,0.5" StrokeThickness="2" Stretch="Fill">
                    <Path.Stroke>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFF7854" Offset="0"/>
                            <GradientStop Color="#FFFD277D" Offset="1"/>
                        </LinearGradientBrush>
                    </Path.Stroke>
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="-0.00087694609253929912" Y="0.37778360689053847"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Grid>
    </Border>
</UserControl>
